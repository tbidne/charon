name: ci

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  cabal:
    strategy:
      fail-fast: false
      matrix:
        ghc:
          - "9.4.7"
          - "9.6.3"
        platform:
          - os: "macos-latest"
            set-env: "export"
            unit-trials: 10000
            int-trials: 1000
          - os: "ubuntu-latest"
            set-env: "export"
            unit-trials: 10000
            int-trials: 1000
          - os: "windows-latest"
            set-env: "set"
            unit-trials: 1000
            int-trials: 1000
    runs-on: ${{ matrix.platform.os }}
    steps:
      - uses: actions/checkout@v3

      - uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}

      - name: Configure
        run: cabal configure --enable-tests --enable-benchmarks --ghc-options -Werror

      - name: Compile
        run: cabal build charon:exe:charon

      - name: Unit Tests
        id: unit
        run: |
          cabal test unit --test-options '--hedgehog-tests ${{ matrix.platform.unit-trials }}'

      - uses: actions/upload-artifact@v3
        name: Unit Tests Upload
        if: ${{ failure() && steps.unit.conclusion == 'failure' }}
        with:
          name: unit-artifacts
          path: test/unit/Unit/Data/Index/*

      - name: Integration Tests
        run: |
          ${{ matrix.platform.set-env }} INT_LOGS=1
          cabal test integration --test-options '--hedgehog-tests ${{ matrix.platform.int-trials }} --hedgehog-discards 10000'

      - name: Functional Tests
        run: cabal test functional

      - name: Benchmarks
        if: ${{ matrix.platform.os == 'ubuntu-latest' }}
        id: bench
        run: |
          cabal bench --benchmark-options '
            --csv benchmarks/${{ matrix.platform.os }}_${{ matrix.ghc }}_ci.csv
            --svg benchmarks/${{ matrix.platform.os }}_${{ matrix.ghc }}_ci.svg
            --baseline benchmarks/baseline_${{ matrix.platform.os }}_${{ matrix.ghc }}_ci.csv
            --fail-if-slower 50
            --fail-if-faster 50'

      - uses: actions/upload-artifact@v3
        name: Benchmarks Upload
        if: ${{ failure() && steps.bench.conclusion == 'failure' }}
        with:
          name: build-artifacts
          path: |
            benchmarks/${{ matrix.platform.os }}_${{ matrix.ghc }}_ci.csv
            benchmarks/${{ matrix.platform.os }}_${{ matrix.ghc }}_ci.svg
  nix:
    strategy:
      fail-fast: false
      matrix:
        os:
        - "macos-latest"
        - "ubuntu-latest"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/897876e4c484f1e8f92009fd11b7d988a121a4e7.tar.gz
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Compile & Test
        run: |
          set +e

          out=$(nix build 2>&1)
          ec=$?

          regex=".*'(nix log \/nix\/store\/.*.drv)'.*"

          if [[ $ec -ne 0 ]]; then
            if [[ $out =~ $regex ]]; then
              echo echo "*** Regex match ***"
              log_cmd="${BASH_REMATCH[1]}"
              $log_cmd | cat
            else
              echo "*** No regex match on output ***"
              echo $out
            fi
          fi

          exit $ec
  lint:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3

      - name: Setup nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=https://github.com/NixOS/nixpkgs/archive/897876e4c484f1e8f92009fd11b7d988a121a4e7.tar.gz
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Formatting
        run: |
          nix run .#format
          git diff --exit-code --color=always

      - name: HLint
        run: nix run .#lint